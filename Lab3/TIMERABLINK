#SampleCode
TI from Resource Explorer was used to make help code this project.

# SIMPLEBLINK
This lab required to toggle the led using a timer for the MSP430 boards. To do this multiple pieces of code where needed. Each board had LEDS and buttons connected to different pins. 
The code for all 5 boards had the same header file. This file was the #include<msp430.h>. This contains all the built in functions for the msp430.
Inside the void function the watchdog timer has to be stopped,this is done by
the code WDTCTL=WDTPW +WDTHOLD. This code makes the processor is not stuck in an infinite
loop. The next steop configures the GPIO pins.

#SETTING GPIO
This step is different for each board. The desription for each GPIO is shown below.
BUTTONS:
G2: P1.3
5529:P2.1 P1.1
FR2311: P1.1
FR6989:P1.1 P1.2
5994: P5.6 P5.5

LEDS:
G2: P1.0 P1.6
5529:P1.0 P1.1
FR2311: P1.0 P2.0
FR6989:P1.0 P9.7
5994: P1.0 P1.1
 To set the LEDS as outputs, the G2 P1.0 will be used as an example. The code used
 is P1DIR |= BIT0; This will set P1 to 1 and the rest of the pins to 0. Setting P1 to 1
 allows it to be an output.
 To set the button as an input, the same approach is taken but the pin will be an 
 input. The code "P1DIR |= BIT0;" will set pin 1.3 to be an input for the button
 on the G2.
 The next part is to set the LED to off. This done by the code:
 P1OUT &= ~BIT0;
 
#TIMERS
TACTL = MC_0;// Stop the timer
  TACTL = TASSEL_2 + ID_3 + TAIE;// Timer Clock = SMCLK,1MHz/8 = 125KHz,enable TAR interrupt

  CCR0 = 10000; // Count in CCR0 register
  CCR1 = 300000; // Count in CCR1 register
  CCR2 = 40000; // Count in CCR2 register

  CCTL0 |= CCIE; // Enable CCR0 interrupt
  CCTL1 |= CCIE; // Enable CCR1 interrupt
  CCTL2 |= CCIE; // Enable CCR2 interrupt

  TACTL |= MC_2; // Start the timer in continuous mode

  _BIS_SR(LPM0_bits + GIE); // Sleep in LPM0 with interrupts enabled               // SMCLK, Contmode
  
#Interrupt Vectors
// Timer A0 interrupt service routine
#pragma vector=TIMER0_A0_VECTOR
__interrupt void Timer_A0 (void)
{
   P1OUT ^= BIT6;                          // Toggle P1.0
}


#pragma vector=TIMER0_A1_VECTOR
__interrupt void Timer_A(void)
{
  switch( TA0IV )
  {
  case  2:                                  // CCR1
    {
    //P1OUT ^= 0x01;                          // Toggle P1.0
    //CCR1 += 500000;                          // Add Offset to CCR1
    }
           break;
  case  4:
  {
    P1OUT^=0x01;
    CCR2+=300000;

  }

      break;
  case 10:

      break;

}
}

 
 
#DIFFERENCES IN BOARDS
Besides the difference in LEDS and BUTTON pins, one piece of code is different for one
of the boards. The code below is needed for the 5994.
PM5CTL0 &= ~LOCKLPM5; 
